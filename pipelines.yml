resources:
- name: RobiNino_mvn_example_pipelines_gitResource
  type: GitRepo
  configuration:
    path: RobiNino/mvn-example-pipelines
    gitProvider: github_RobiNino_mvn_example_pipelines_integration
    buildOn:
      pullRequestCreate: true
    branches:
      include: main
- name:       RobiNino_mvn_example_pipelines_pipeline_bi
  type: BuildInfo
  configuration:
    sourceArtifactory:    rt_RobiNino_mvn_example_pipelines_integration
    #buildName:            <string>
    #buildNumber:          <number>
    #externalCI:           jenkinsIntegration
pipelines:
  - name: RobiNino_mvn_example_pipelines_pipeline
    configuration:
      environmentVariables:
        readOnly:
          'JFROG_CLI_BUILD_URL': $step_url
          'JFROG_BUILD_STATUS': 'PASS'
    steps:
      - name: MvnBuildRobi
        type: MvnBuild
        configuration:
          #inherits from bash
          mvnCommand:           clean install
          #sourceLocation:       <string>      # optional
          resolverSnapshotRepo: maven-virtuall      # optional
          resolverReleaseRepo:  maven-virtuall      # optional
          #deployerSnapshotRepo: <string>      # optional
          #deployerReleaseRepo:  <string>      # optional
          #forceXrayScan:        <string>      # optional
          #failOnScan:           <boolean>     # default true
          autoPublishBuildInfo: true      # optional
          #configFileLocation:   <string>      # optional
          #configFileName:       <string>      # optional
 
          integrations:
            - name:         rt_RobiNino_mvn_example_pipelines_integration  # required
          inputResources:
            - name:         RobiNino_mvn_example_pipelines_gitResource         # required
            #- name:         <FileSpec resource>        # optional
          outputResources:
            - name:         RobiNino_mvn_example_pipelines_pipeline_bi       # if autoPublishBuildInfo is true
 
        execution:
          onStart:
            - echo "Preparing for work..."
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete:                                  #always
            - echo "Cleaning up some stuff"
      #- name: PublishBuildInfoRobi
      #  type: PublishBuildInfo
      #  configuration:
      #    #inherits from bash
      #    #envInclude:       <string>  
      #    #envExclude:       <string>  
      #    #forceXrayScan:    <boolean>    # default false
      #    #failOnScan:       <boolean>    # default true
 #
      #    inputSteps:
      #      - name:         MvnBuildRobi  # required
      #    outputResources:
      #      - name:         RobiNino_mvn_example_pipelines_pipeline_bi                     # required
 #
 #
      #  execution:
      #    onStart:
      #      - echo "Preparing for work..."
      #    onSuccess:
      #      - echo "Job well done!"
      #    onFailure:
      #      - echo "uh oh, something went wrong"
      #    onComplete: #always
      #      - echo "Cleaning up some stuff"

#- name: RobiNino_mvn_example_pipelines_pipeline
#  configuration:
#    runtime:
#      type: image
#      image:
#        custom:
#          name: releases-docker.jfrog.io/jfrog/jfrog-cli-full
#          tag: latest
#  steps:
#  - name: Build
#    type: Bash
#    configuration:
#      inputResources:
#      - name: RobiNino_mvn_example_pipelines_gitResource
#      integrations:
#      - name: rt_RobiNino_mvn_example_pipelines_integration
#    execution:
#      onExecute:
#      - cd $res_RobiNino_mvn_example_pipelines_gitResource_resourcePath
#      - export CI=true
#      - export JFROG_CLI_BUILD_NAME=mvn-example-pipelines-main
#      - export JFROG_CLI_BUILD_NUMBER=$run_number
#      - export JFROG_CLI_BUILD_URL=$step_url
#      - export JFROG_BUILD_STATUS=PASS
#      - jfrog c add RobiNino_mvn_example_pipelines_serverId --artifactory-url $int_rt_RobiNino_mvn_example_pipelines_integration_url
#        --user $int_rt_RobiNino_mvn_example_pipelines_integration_user --apikey $int_rt_RobiNino_mvn_example_pipelines_integration_apikey
#        --enc-password=false
#      - MVN_PATH=`which mvn` && export M2_HOME=`readlink -f $MVN_PATH | xargs dirname
#        | xargs dirname`
#      - jfrog rt mvn-config --server-id-resolve RobiNino_mvn_example_pipelines_serverId
#        --repo-resolve-releases maven-virtual --repo-resolve-snapshots maven-virtual
#      - jfrog rt mvn clean install
#      - jfrog rt bag
#      - jfrog rt bce
#      - jfrog rt bp
#      onComplete:
#      - update_commit_status RobiNino_mvn_example_pipelines_gitResource
#      onFailure:
#      - export JFROG_BUILD_STATUS=FAIL
#      - jfrog rt bce
#      - jfrog rt bp
      
